<h1>Verb#index</h1>

<% @verbs.each do |word| %>
  <h2><%= word.verb %></h2>
  <%= puts @tmp%>
<% end %>

<script type="text/javascript">
var dataset = [@tmp.count];
//Width and height
var w = 500;
var h = 100;
var barPadding = 1;

//Create SVG element
var svg = d3.select("body")
            .append("svg")
            .attr("width", w)
            .attr("height", h);

svg.selectAll("rect")
   .data(dataset)
   .enter()
   .append("rect")
   .attr("x", function(d, i) {
        return i * (w / dataset.length);
   })
   .attr("y", function(d) {
        return h - (d * 4);
   })
   .attr("width", w / dataset.length - barPadding)
   .attr("height", function(d) {
        return d * 4;
   })
   .attr("fill", function(d) {
        return "rgb(0, 0, " + (d * 10) + ")";
   });

svg.selectAll("text")
   .data(dataset)
   .enter()
   .append("text")
   .text(function(d) {
        return d;
   })
   .attr("x", function(d, i) {
        return i * (w / dataset.length) + 5;
   })
   .attr("y", function(d) {
        return h - (d * 4) + 15;
   })
   .attr("font-family", "sans-serif")
   .attr("font-size", "11px")
   .attr("fill", "white");
////////////CODE FOR PIE CHART/////////////////////
// var width = 960,
//     height = 500,
//     radius = Math.min(width, height) / 2;

// var color = d3.scale.ordinal()
//     .range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

// var arc = d3.svg.arc()
//     .outerRadius(radius - 10)
//     .innerRadius(0);

// var labelArc = d3.svg.arc()
//     .outerRadius(radius - 40)
//     .innerRadius(radius - 40);

// var pie = d3.layout.pie()
//     .sort(null)
//     .value(function(d) { return d.population; });

// var svg = d3.select("body").append("svg")
//     .attr("width", width)
//     .attr("height", height)
//   .append("g")
//     .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

// d3.csv("data.csv", type, function(error, data) {
//   if (error) throw error;

//   var g = svg.selectAll(".arc")
//       .data(pie(data))
//     .enter().append("g")
//       .attr("class", "arc");

//   g.append("path")
//       .attr("d", arc)
//       .style("fill", function(d) { return color(d.data.age); });

//   g.append("text")
//       .attr("transform", function(d) { return "translate(" + labelArc.centroid(d) + ")"; })
//       .attr("dy", ".35em")
//       .text(function(d) { return d.data.age; });
// });

// function type(d) {
//   d.population = +d.population;
//   return d;
// }
</script>